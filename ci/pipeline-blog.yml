resources:
  - name: repo
    type: git
    source:
      uri: https://github.com/carterjones/infrastructure
      branch: dev

  - name: blog-rc
    type: s3
    source:
      bucket: carterjones-pipeline-artifacts
      versioned_file: blog/ami-rc
      region_name: us-west-2
      private: true
      access_key_id: {{concourse_access_key}}
      secret_access_key: {{concourse_secret_key}}

  - name: test-instance-data
    type: s3
    source:
      bucket: carterjones-pipeline-artifacts
      versioned_file: blog/test-instance-data.tar.gz
      region_name: us-west-2
      private: true
      access_key_id: {{concourse_access_key}}
      secret_access_key: {{concourse_secret_key}}

  - name: base-final
    type: s3
    source:
      bucket: carterjones-pipeline-artifacts
      versioned_file: base/ami
      region_name: us-west-2
      private: true
      access_key_id: {{concourse_access_key}}
      secret_access_key: {{concourse_secret_key}}

jobs:
  # Note: this simply detects that a new version of base has been built. It does
  # not actually import the base AMI from this resource. Packer automatically
  # grabs the latest base AMI instead.
  # TODO: allow packer to receive a specific base AMI ID, but default to the latest.
  - name: build-from-base-change
    plan:
      - aggregate:
          - get: repo
            trigger: true
          - get: base-final
            trigger: true
      - task: build
        file: repo/ci/build/blog.yml
      - put: blog-rc
        params:
          file: ami/id

  - name: build-manual
    plan:
      - get: repo
      - task: build
        file: repo/ci/build/blog.yml
      - put: blog-rc
        params:
          file: ami/id

  - name: launch-test-instance
    plan:
      - aggregate:
          - get: repo
          - get: ami-in
            resource: blog-rc
            trigger: true
      - task: test
        file: repo/ci/tasks/launch-test-instance.yml
        params:
          ROLE: blog
          TIER: ci
      - put: test-instance-data
        params:
          file: test-instance/data.tar.gz

  - name: test-ssh-login
    plan:
      - aggregate:
          - get: repo
            passed: [launch-test-instance]
            trigger: true
          - get: ami-in
            resource: blog-rc
            passed: [launch-test-instance]
            trigger: true
          - get: test-instance
            resource: test-instance-data
            passed: [launch-test-instance]
            trigger: true
      - task: test-ssh-login
        file: repo/ci/tasks/ssh-login.yml
        params:
          ROLE: blog
          TIER: ci

  - name: test-https-connect
    plan:
      - aggregate:
          - get: repo
            passed: [launch-test-instance]
            trigger: true
          - get: ami-in
            resource: blog-rc
            passed: [launch-test-instance]
            trigger: true
          - get: test-instance
            resource: test-instance-data
            passed: [launch-test-instance]
            trigger: true
      - task: test-https-connect
        file: repo/ci/tasks/https-connect.yml

  - name: tests-pass
    plan:
      - aggregate:
          - get: repo
            passed:
              - test-ssh-login
              - test-https-connect
            trigger: true
          - get: ami-in
            resource: blog-rc
            passed:
              - test-ssh-login
              - test-https-connect
            trigger: true

  - name: tag-ami
    plan:
      - aggregate:
          - get: repo
            passed: [tests-pass]
            trigger: true
          - get: ami-in
            resource: blog-rc
            passed: [tests-pass]
            trigger: true
      - task: tag-ami
        file: repo/ci/tasks/tag-ami.yml

  - name: destroy-test-instance
    plan:
      - aggregate:
          - get: repo
            passed: [tests-pass]
            trigger: true
          - get: ami-in
            resource: blog-rc
            passed: [tests-pass]
            trigger: true
      - task: destroy-test-instance
        file: repo/ci/tasks/destroy-instance.yml
        params:
          ROLE: blog
          TIER: ci

# TODO: add job to snapshot the ebs volume
# TODO: add job to deploy to prod
